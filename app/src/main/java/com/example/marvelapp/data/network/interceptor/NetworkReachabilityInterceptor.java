package com.example.marvelapp.data.network.interceptor;import android.util.Log;import androidx.annotation.NonNull;import com.example.marvelapp.data.network.NetworkUtils;import java.io.IOException;import java.util.Calendar;import okhttp3.HttpUrl;import okhttp3.Interceptor;import okhttp3.Request;import okhttp3.Response;class NetworkNotAvailableException extends IOException{    public NetworkNotAvailableException() {        super("Internet connection not available");    }}public class NetworkReachabilityInterceptor implements Interceptor {    private static final String TS = "ts";    private static final String API_KEY = "apikey";    private static final String HASH = "hash";    @NonNull    @Override    public Response intercept(@NonNull Chain chain) throws IOException {        Request originalRequest = chain.request();        String ts = String.valueOf(Calendar.getInstance().getTime().getTime());        String apikey = NetworkUtils.PUBLIC_KEY;        String hashInput = ts + NetworkUtils.PRIVATE_KEY + NetworkUtils.PUBLIC_KEY;        Log.d("TAG_", "INTERCEPT");        HttpUrl httpUrl = originalRequest.url().newBuilder()                .addQueryParameter("ts", ts)                .addQueryParameter("apikey", apikey)                .addQueryParameter("hash", NetworkUtils.md5(hashInput)).build();        Request.Builder builder = originalRequest.newBuilder().url(httpUrl);        Log.d("TAG_", httpUrl.url().toString());        Request newRequest = builder.build();        return chain.proceed(newRequest);    }}